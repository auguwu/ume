# üêª‚Äç‚ùÑÔ∏èüíê ume: Easy, self-hostable, and flexible image host made in Rust
# Copyright 2021-2025 Noel Towa <cutie@floofy.dev>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[package]
name = "ume"
description = "üêª‚Äç‚ùÑÔ∏èüíê Easy, self-hostable, and flexible image host made in Rust"
version = "4.2.0"
authors = ["Noel Towa <cutie@floofy.dev>"]
edition = "2024"
repository = "https://github.com/auguwu/ume"

[[bin]]
name = "ume"
path = "./src/bin/ume.rs"

[features]
default = ["os-notifier", "libsystemd"]

# Allows to use the OS' notification system for `ume screenshot`. This is disabled
# on the Docker distribution as the Docker image *should* be only used for the `ume server`
# command.
os-notifier = ["dep:notify-rust"]

[dependencies]
arboard = { version = "3.4.1", features = ["wayland-data-control"] }
axum = { version = "0.8.1", features = ["macros"] }
axum-extra = { version = "0.10.0", features = ["typed-header"] }
axum-server = { version = "0.7.2", features = ["tls-rustls"] }
chrono = "0.4.39"
clap = { version = "4.5.35", features = ["derive", "env"] }
clap_complete = "4.5.47"
color-eyre = { version = "0.6.3", features = ["issue-url", "tracing-error"] }
dotenvy = "0.15.7"
either = "1.14.0"
etcetera = "0.10.0"
eyre = "0.6.12"
image = "0.25.5"
mimalloc = "0.1.46"
mime = "0.3.17"
multer = "3.1.0"
notify-rust = { version = "4.11.5", optional = true }
num_cpus = "1.16.0"
opentelemetry = "0.29.1"
opentelemetry-otlp = { version = "0.29.0", features = [
    "http-proto",
    "grpc-tonic",
] }
opentelemetry_sdk = "0.29.0"
owo-colors = "4.2.0"
rand = "0.9.0"
reqwest = { version = "0.12.15", default-features = false, features = [
    "multipart",
    "json",
    "http2",
    "charset",
    "macos-system-configuration",
    "rustls-tls",
] }
sentry = "0.37.0"
sentry-tower = { version = "0.37.0", features = ["axum", "http"] }
sentry-tracing = "0.37.0"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.139"
tokio = { version = "1.44.2", features = ["rt", "macros", "net", "signal"] }
toml = "0.8.20"
tower-http = { version = "0.6.2", features = ["catch-panic"] }
tracing = "0.1.41"
tracing-opentelemetry = "0.30.0"
tracing-subscriber = { version = "0.3.19", features = ["tracing-log"] }
url = "2.5.4"
which = "7.0.2"

[dependencies.azalia]
version = "0.1.5"
features = [
    "regex",

    "config",
    "config+url",
    "config+sentry",
    "config+macros",
    "config+tracing",

    "log",
    "log+writers",

    "remi",
    "remi+all",
    "remi+serde",
    "remi+tracing",
    "remi+export-crates",

    "serde",
    "serde+tracing",
]

[dependencies.charted-core]
version = "0.1.0"
git = "https://github.com/charted-dev/charted"
rev = "b6354382429e622e17c20072f685db736075e6c3"

[target.'cfg(target_os = "linux")'.dependencies]
libsystemd = { version = "0.7.0", optional = true }

[build-dependencies]
chrono = "0.4.39"
rustc_version = "0.4.1"
which = "7.0.2"

[profile.release]
codegen-units = 1 # use a single codegen unit
opt-level = "s"   # optimize for size
panic = "abort"   # abort the process when a panic occurs
strip = true      # strip all debug symbols
debug = 0         # disable debug information
lto = true        # perform LTO on all crates (even our own)
